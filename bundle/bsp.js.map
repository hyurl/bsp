{"version":3,"sources":["webpack://bsp/webpack/universalModuleDefinition","webpack://bsp/webpack/bootstrap","webpack://bsp/./index.js","webpack://bsp/./node_modules/sprintf-js/src/sprintf.js","webpack://bsp/./node_modules/concat-typed-array/lib/index.js","webpack://bsp/./node_modules/concat-typed-array/lib/concat.js","webpack://bsp/./node_modules/is-like/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sprintf","concatTypedArray","isBufferLike","hasBuffer","Buffer","TypedArray","Uint8Array","encoder","decoder","encodeText","text","from","encode","Error","decodeText","buf","toString","decode","concatBuffers","bufs","data","length","SyntaxError","payload","type","NaN","_type","Number","JSON","stringify","TypeError","head","len","byteLength","push","blen","bin","parseInt","slice","isHeaderTemp","temp","undefined","fillTemp","info","lenType","offset","parsePayloadInfo","decodeSegment","BigInt","Boolean","parse","splice","arguments","Array","isArray","next","TextEncoder","TextDecoder","wrap","stream","_write","write","_on","on","_once","once","_prepend","prependListener","_prependOnce","prependOnceListener","addListener","fn","event","listener","chunk","encoding","callback","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","modulo","placeholder","key_access","index_access","sign","parse_tree","argv","arg","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","param_no","test","Function","isNaN","String","fromCharCode","width","precision","parseFloat","toExponential","toFixed","toPrecision","substring","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","align","sprintf_format","fmt","sprintf_cache","match","_fmt","arg_names","exec","field_list","replacement_field","field_match","sprintf_parse","vsprintf","apply","concat","window","obj","_concat","_concat2","default","ResultConstructor","totalLength","_len","arrays","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","arr","err","return","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","isObjectWith","props","every","isArrayLike","isCollectionLike","excludeWeakOnes","WeakMap","WeakSet","isErrorLike","isPromiseLike","then"],"mappings":"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","file":"bsp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bsp\"] = factory();\n\telse\n\t\troot[\"bsp\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst sprintf = require(\"sprintf-js\").sprintf;\nconst concatTypedArray = require(\"concat-typed-array\");\nconst { isBufferLike } = require(\"is-like\");\n\nconst hasBuffer = typeof Buffer === \"function\";\nconst TypedArray = hasBuffer ? Buffer : Uint8Array;\n\n/** @type {TextEncoder} */\nlet encoder;\n/** @type {TextDecoder} */\nlet decoder;\n\nif (typeof TextEncoder === \"function\") {\n    encoder = new TextEncoder();\n}\n\nif (typeof TextDecoder === \"function\") {\n    decoder = new TextDecoder(\"utf8\");\n}\n\n/**\n * @param {string} text \n * @returns {Buffer|Uint8Array}\n */\nfunction encodeText(text) {\n    if (hasBuffer) {\n        return Buffer.from(text);\n    } else if (encoder) {\n        return encoder.encode(text);\n    } else {\n        throw new Error(\"No implementation of text encoder was found\");\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @returns {string}\n */\nfunction decodeText(buf) {\n    if (hasBuffer) {\n        return Buffer.from(buf).toString(\"utf8\");\n    } else if (decoder) {\n        return decoder.decode(buf);\n    } else {\n        throw new Error(\"No implementation of text decoder was found\");\n    }\n}\n\n/**\n * @param {Buffer[] | Uint8Array[]} bufs\n * @returns {Buffer|Uint8Array}\n */\nfunction concatBuffers(bufs) {\n    return concatTypedArray(TypedArray, ...bufs);\n}\n\nfunction encode(...data) {\n    if (data.length === 0) {\n        throw new SyntaxError(\"encode function requires at least one argument\");\n    }\n\n    let buf = TypedArray.from([]);\n\n    for (let payload of data) {\n        let type = NaN;\n        let _type = typeof payload;\n\n        switch (_type) {\n            case \"string\":\n                type = 1;\n                payload = encodeText(payload);\n                break;\n\n            case \"number\":\n                type = 2;\n                payload = encodeText(payload.toString());\n                break;\n\n            case \"bigint\":\n                type = 3;\n                payload = encodeText(payload.toString());\n                break;\n\n            case \"boolean\":\n                type = 4;\n                payload = TypedArray.from([Number(payload)]);\n                break;\n\n            case \"object\":\n            case \"undefined\":\n                if (null === payload || undefined === payload) {\n                    type = 0;\n                    payload = TypedArray.from([]);\n                } else if (isBufferLike(payload)) {\n                    type = 6; // raw data\n                } else {\n                    type = 5;\n                    payload = encodeText(JSON.stringify(payload));\n                }\n                break;\n\n            default:\n                throw new TypeError(`unsupported payload type '${_type}'`);\n        }\n\n        let head = [type];\n        let len = payload.byteLength;\n\n        if (len <= 255) {\n            head.push(1, len);\n        } else {\n            let blen = len <= 65535 ? 16 : 64;\n            let bin = sprintf(`%0${blen}b`, len);\n\n            head.push(len <= 65535 ? 2 : 3);\n\n            for (let i = 0; i < blen;) {\n                head.push(parseInt(bin.slice(i, i += 8), 2));\n            }\n        }\n\n        buf = concatBuffers([buf, TypedArray.from(head), payload]);\n    }\n\n    return buf;\n}\n\n/**\n * @param {Buffer|Uint8Array} buf\n */\nfunction parsePayloadInfo(buf) {\n    if (buf.byteLength < 3) {\n        return null; // header frame\n    }\n\n    let [type, lenType] = buf;\n    let offset = [0, 3, 4, 10][lenType];\n    let length = -1;\n    let bin = \"\";\n\n    if (type > 6 || lenType > 3) {\n        return false; // malformed/unencoded data\n    }\n\n    if (buf.byteLength < offset) {\n        return null;  // header frame\n    }\n\n    switch (lenType) {\n        case 1:\n            length = buf[2];\n            break;\n\n        case 2:\n            for (let i = 2; i < 4; i++) {\n                bin += sprintf(\"%08b\", buf[i]);\n            }\n\n            length = parseInt(bin, 2);\n            break;\n\n        case 3:\n            for (let i = 2; i < 10; i++) {\n                bin += sprintf(\"%08b\", buf[i]);\n            }\n\n            length = parseInt(bin, 2);\n            break;\n    }\n\n    return { type, offset, length };\n}\n\n/**\n * @param {[number, number, Buffer|Uint8Array]} temp \n */\nfunction isHeaderTemp(temp) {\n    return temp.length === 3\n        && temp[0] === undefined\n        && temp[1] === undefined\n        && temp[2] instanceof Uint8Array;\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @param {[number, number, Buffer|Uint8Array]} temp \n */\nfunction fillTemp(buf, temp) {\n    if (isHeaderTemp(temp)) {\n        buf = concatBuffers([temp[2], buf]);\n    }\n\n    let info = parsePayloadInfo(buf);\n\n    if (info === false) {\n        return; // malformed/unencoded data\n    } else if (info === null) {\n        temp[0] = temp[1] = void 0;\n        temp[2] = buf;\n    } else {\n        let { type, length, offset } = info;\n\n        if (offset !== 0) {\n            temp[0] = type;\n            temp[1] = length;\n            temp[2] = buf.slice(offset);\n        }\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @param {[number, number, Buffer|Uint8Array]} temp\n * @returns {IterableIterator<any>}\n */\nfunction* decodeSegment(buf, temp) {\n    // put the buffer into the temp\n    if (temp.length === 0 || isHeaderTemp(temp)) {\n        fillTemp(buf, temp);\n    } else if (temp.length === 3) {\n        temp[2] = concatBuffers([temp[2], buf]);\n    }\n\n    // scan the temp and yield any parsed data\n    while (temp.length === 3 && temp[2].byteLength >= temp[1]) {\n        let [type, length, buf] = temp;\n        let payload = buf.slice(0, length);\n\n        buf = buf.slice(length);\n\n        switch (type) {\n            case 0: // null\n                yield null;\n                break;\n\n            case 1:\n                yield decodeText(payload);\n                break;\n\n            case 2:\n                yield Number(decodeText(payload));\n                break;\n\n            case 3:\n                yield BigInt(decodeText(payload));\n                break;\n\n            case 4:\n                yield Boolean(payload[0]);\n                break;\n\n            case 5:\n                yield JSON.parse(decodeText(payload));\n                break;\n\n            case 6:\n                yield payload;\n                break;\n\n            default:\n                throw TypeError(\n                    `unknown payload type '${sprintf(\"0x02X\", type)}'`);\n        }\n\n        if (buf.byteLength > 0) {\n            fillTemp(buf, temp);\n        } else {\n            temp.splice(0, 3); // clean temp\n        }\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n */\nfunction decode(buf) {\n    if (arguments.length === 2 && Array.isArray(arguments[1])) {\n        return decodeSegment(buf, arguments[1]);\n    } else {\n        return decodeSegment(buf, []).next().value;\n    }\n}\n\nfunction wrap(stream) {\n    let _write = stream.write.bind(stream);\n    let _on = stream.on.bind(stream);\n    let _once = stream.once.bind(stream);\n    let _prepend = stream.prependListener.bind(stream);\n    let _prependOnce = stream.prependOnceListener.bind(stream);\n    let addListener = (fn, event, listener) => {\n        if (event === \"data\") {\n            let temp = [];\n            let _listener = (buf) => {\n                for (let data of decode(buf, temp)) {\n                    listener(data);\n                }\n            };\n            return fn(\"data\", _listener);\n        } else {\n            return fn(event, listener);\n        }\n    };\n\n    stream.write = function write(chunk, encoding, callback) {\n        return _write(encode(chunk), encoding, callback);\n    };\n\n    stream.on = stream.addListener = function on(event, listener) {\n        return addListener(_on, event, listener);\n    };\n\n    stream.once = function once(event, listener) {\n        return addListener(_once, event, listener);\n    };\n\n    stream.prependListener = function prependListener(event, listener) {\n        return addListener(_prepend, event, listener);\n    };\n\n    stream.prependOnceListener = function prependOnceListener(event, listener) {\n        return addListener(_prependOnce, event, listener);\n    };\n\n    return stream;\n}\n\nexports.encode = encode;\nexports.decode = decode;\nexports.wrap = wrap;","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * @param {any} obj \n * @param {Array<string|symbol>} props \n */\nfunction isObjectWith(obj, props) {\n    let isObj = typeof obj === \"object\" && obj !== null;\n    return isObj && props.every(p => p in obj);\n}\n\nfunction isArrayLike(obj) {\n    return isObjectWith(obj, [\"length\"]) || (typeof obj === \"string\");\n}\n\nfunction isCollectionLike(obj, excludeWeakOnes = false) {\n    return (isObjectWith(obj, [\"size\"])\n        && typeof obj[Symbol.iterator] === \"function\")\n        || (!excludeWeakOnes &&\n            (obj instanceof WeakMap || obj instanceof WeakSet));\n}\n\nfunction isBufferLike(obj) {\n    return isObjectWith(obj, [\"byteLength\"])\n        && typeof obj.slice === \"function\";\n}\n\nfunction isErrorLike(obj) {\n    return isObjectWith(obj, [\"name\", \"message\", \"stack\"]);\n}\n\nfunction isPromiseLike(obj) {\n    return isObjectWith(obj, [])\n        && typeof obj.then === \"function\";\n}\n\nexports.isArrayLike = isArrayLike;\nexports.isCollectionLike = isCollectionLike;\nexports.isBufferLike = isBufferLike;\nexports.isErrorLike = isErrorLike;\nexports.isPromiseLike = isPromiseLike;"],"sourceRoot":""}